package goAba

import (
	"fmt"
	"time"
)

type Header struct {
	Type        string    // should be "0"
	BSB         string    // Main account BSB. Ignored according to spec
	Account     string    // Main account number, Up to 9 chars, ignored
	Bank        string    // Name of Financial institution processing the file, 3 char "ANZ", "WBC"
	User        string    // How the user will be shown in the transactions of the 3rd party banks
	UserNumber  string    // The ID of the user supplying this file
	Description string    // Description of this file entries, up to 12 chars
	Date        string    // date to be processed
	Time        time.Time // time to be processed, ignored.
}

type SchemaField struct {
	Name       string
	Boundaries []int
	Type       string
}

type Schema struct {
	RecordType string
	Fields     []SchemaField
}

type Footer struct {
	Type                 string // Default = "7", auto generated field, can override
	BSB                  string // Default = "999999" This is autogenerated, can override
	NetTotal             string // This is auto generated, can overide
	CreditTotal          string // This is auto generated, can override
	DebitTotal           string // this is auto generated, can override
	NumberOfTransactions string // this is autog generated, can override
}

type Transaction struct {
	TransactionType string  //
	BSB             string  // the 3rd party account BSB
	Tax             string  //
	TransactionCode string  // Debit or Credit?
	Account         string  // 3rd party account number
	Amount          float64 //
	AccountTitle    string  // 3rd party (recipient) account name. up to 32 chars
	Reference       string  // payment ref. e.g "Invoice #1" up to 18 chars
	TraceBSB        string  // the transacting account BSB
	TraceAccount    string  // the transacting account number
	Remitter        string  // trhe transacting company name.
	TaxAmount       float64 //
}

type ABA struct {
	Header       Header
	Schema       []Schema
	Footer       Footer
	Transactions []Transaction
}

func (h *Header) ToString() string {
	headerStr := fmt.Sprintf("0                 01%s       %s%s%s%s                                        ", h.Bank, h.User, h.UserNumber, h.Description, h.Date)
	return headerStr
}

func (t *Transaction) ToString() string {
	var transactionStr string
	// add record
	transactionStr += "1"

	// add bsb
	bankNum := buildBankNumber(t.BSB)
	transactionStr += bankNum

	// add acc number
	accNum := buildAccNumber(t.Account)
	transactionStr += accNum

	// add indicator
	// dont have one right now (TODO:?)
	transactionStr += " "

	// add transaction code
	transactionStr += t.TransactionCode

	// add amount
	amountStr := buildTotal(t.Amount)
	amount := fillField(10, amountStr, "right", "0")
	transactionStr += amount

	// add title
	titleStr := fillField(32, t.AccountTitle, "left", " ")
	transactionStr += titleStr

	// add reference
	refStr := fillField(18, t.Reference, "left", " ")
	transactionStr += refStr

	//add trace record
	transactionStr += buildBankNumber(t.TraceBSB)

	//add trace acc
	transactionStr += fillField(9, t.TraceAccount, "right", " ")

	//add remitter
	transactionStr += fillField(16, t.Remitter, "left", " ")

	//add tax
	transactionStr += fillField(8, buildTotal(t.TaxAmount), "right", "0")

	return transactionStr
}

func (f *Footer) ToString() string {
	footerStr := fmt.Sprintf("7999-999            %s%s%s                        %s                                        ", f.NetTotal, f.CreditTotal, f.DebitTotal, f.NumberOfTransactions)
	return footerStr
}
